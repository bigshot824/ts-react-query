{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.68079c404d7c614512b9.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport axios, { AxiosError } from 'axios'\n\nimport { useQuery, QueryClient, QueryClientProvider, UseQueryOptions } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nconst client = new QueryClient()\n\ntype Todos = {\n  items: readonly {\n    id: string\n    text: string\n  }[]\n}\n\nasync function fetchTodos(): Promise<Todos> {\n  const res: any = [\n    { id: '1', first_name: 'aaa', last_name: 'aaa' },\n    { id: '2', first_name: 'bbb', last_name: 'bbb' },\n    { id: '3', first_name: 'ccc', last_name: 'ccc' },\n  ]\n  return res\n}\n\nfunction useTodos<TData = Todos>(options?: UseQueryOptions<Todos, AxiosError, TData, string[]>) {\n  return useQuery(['todos'], fetchTodos, options)\n}\n\nfunction TodoCounter() {\n  // subscribe only to changes in the 'data' prop, which will be the\n  // amount of todos because of the select function\n  const counterQuery = useTodos({\n    select: (data) => data.items.length,\n    notifyOnChangeProps: ['data'],\n  })\n\n  React.useEffect(() => {\n    console.log('rendering counter')\n  })\n\n  return <div>TodoCounter: {counterQuery.data ?? 0}</div>\n}\n\nexport default function App() {\n  return (\n    <QueryClientProvider client={client}>\n      <TodoCounter />\n      <ReactQueryDevtools initialIsOpen />\n    </QueryClientProvider>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AAEA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}