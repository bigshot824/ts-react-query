{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { useQuery, QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nconst client = new QueryClient();\n\nasync function fetchTodos() {\n  const res = [{\n    id: '1',\n    first_name: 'aaa',\n    last_name: 'aaa'\n  }, {\n    id: '2',\n    first_name: 'bbb',\n    last_name: 'bbb'\n  }, {\n    id: '3',\n    first_name: 'ccc',\n    last_name: 'ccc'\n  }];\n  return res;\n}\n\nfunction useTodos(options) {\n  return useQuery(['todos'], fetchTodos, options);\n}\n\nfunction TodoCounter() {\n  var _counterQuery$data;\n\n  // subscribe only to changes in the 'data' prop, which will be the\n  // amount of todos because of the select function\n  const counterQuery = useTodos({\n    select: data => data.items.length,\n    notifyOnChangeProps: ['data']\n  });\n  React.useEffect(() => {\n    console.log('rendering counter');\n  });\n  return __jsx(\"div\", null, \"TodoCounter: \", (_counterQuery$data = counterQuery.data) !== null && _counterQuery$data !== void 0 ? _counterQuery$data : 0);\n}\n\nexport default function App() {\n  return __jsx(QueryClientProvider, {\n    client: client\n  }, __jsx(TodoCounter, null), __jsx(ReactQueryDevtools, {\n    initialIsOpen: true\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}